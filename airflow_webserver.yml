apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
spec:
  type: NodePort
  selector:
    app: airflow-webserver
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      initContainers:
      - name: db-init
        image: busybox
        command: ['sh', '-c', 'until nc -z -v -w30 airflow-postgres 5432; do echo "Waiting for migrations..."; sleep 5; done;']
      containers:
      - name: webserver
        image: my/airflow_custom_build:local
        imagePullPolicy: IfNotPresent
        command: ["airflow", "webserver"]
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: airflow-config
        - secretRef:
            name: airflow-secret
        volumeMounts:
        - name: airflow-logs
          mountPath: /opt/airflow/logs
        - name: airflow-dags
          mountPath: /opt/airflow/dags
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
        - name: airflow-logs
          emptyDir: { }
        - name: airflow-dags
          emptyDir: { }